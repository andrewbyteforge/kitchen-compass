# Generated by Django 4.2.23 on 2025-07-10 18:21

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("asda_scraper", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="ProxyConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        default="Default Configuration",
                        help_text="Configuration name",
                        max_length=100,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this configuration is currently active",
                    ),
                ),
                (
                    "enable_proxy_service",
                    models.BooleanField(
                        default=False, help_text="Enable proxy service for scraping"
                    ),
                ),
                (
                    "prefer_paid_proxies",
                    models.BooleanField(
                        default=True,
                        help_text="Use paid proxies before trying free ones",
                    ),
                ),
                (
                    "fallback_to_free",
                    models.BooleanField(
                        default=True,
                        help_text="Use free proxies when paid proxies fail",
                    ),
                ),
                (
                    "allow_direct_connection",
                    models.BooleanField(
                        default=False,
                        help_text="Allow direct connection when all proxies fail",
                    ),
                ),
                (
                    "rotation_strategy",
                    models.CharField(
                        choices=[
                            ("round_robin", "Round Robin"),
                            ("random", "Random"),
                            ("least_used", "Least Used"),
                            ("performance_based", "Performance Based"),
                        ],
                        default="performance_based",
                        help_text="How to select the next proxy",
                        max_length=50,
                    ),
                ),
                (
                    "max_requests_per_proxy",
                    models.PositiveIntegerField(
                        default=100, help_text="Rotate proxy after this many requests"
                    ),
                ),
                (
                    "proxy_timeout_seconds",
                    models.PositiveIntegerField(
                        default=10, help_text="Timeout for proxy connections in seconds"
                    ),
                ),
                (
                    "health_check_interval_minutes",
                    models.PositiveIntegerField(
                        default=5, help_text="Check proxy health every N minutes"
                    ),
                ),
                (
                    "daily_budget_limit",
                    models.DecimalField(
                        decimal_places=2,
                        default=100.0,
                        help_text="Maximum daily spend on paid proxies (USD)",
                        max_digits=10,
                    ),
                ),
                (
                    "cost_alert_threshold",
                    models.DecimalField(
                        decimal_places=2,
                        default=80.0,
                        help_text="Alert when daily cost exceeds this amount (USD)",
                        max_digits=10,
                    ),
                ),
                (
                    "enable_free_proxy_fetching",
                    models.BooleanField(
                        default=True,
                        help_text="Automatically fetch and validate free proxies",
                    ),
                ),
                (
                    "free_proxy_update_hours",
                    models.PositiveIntegerField(
                        default=1, help_text="Update free proxy list every N hours"
                    ),
                ),
                (
                    "max_free_proxies",
                    models.PositiveIntegerField(
                        default=200,
                        help_text="Maximum number of free proxies to maintain",
                    ),
                ),
                (
                    "enable_monitoring",
                    models.BooleanField(
                        default=True, help_text="Enable proxy performance monitoring"
                    ),
                ),
                (
                    "alert_email",
                    models.EmailField(
                        blank=True,
                        help_text="Email for proxy alerts (leave blank to disable)",
                        max_length=254,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Proxy Configuration",
                "verbose_name_plural": "Proxy Configurations",
            },
        ),
        migrations.CreateModel(
            name="ProxyProviderSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "provider",
                    models.CharField(
                        choices=[
                            ("bright_data", "Bright Data (Luminati)"),
                            ("smartproxy", "SmartProxy"),
                            ("oxylabs", "Oxylabs"),
                            ("blazing_seo", "Blazing SEO"),
                            ("storm_proxies", "Storm Proxies"),
                            ("proxy_cheap", "Proxy-Cheap"),
                            ("hydraproxy", "HydraProxy"),
                            ("custom", "Custom Provider"),
                        ],
                        help_text="Proxy provider service",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "display_name",
                    models.CharField(
                        help_text="Display name for this provider", max_length=100
                    ),
                ),
                (
                    "is_enabled",
                    models.BooleanField(
                        default=False, help_text="Enable this proxy provider"
                    ),
                ),
                (
                    "tier",
                    models.CharField(
                        choices=[
                            ("premium", "Premium (Residential)"),
                            ("standard", "Standard (Datacenter)"),
                        ],
                        default="standard",
                        help_text="Proxy quality tier",
                        max_length=20,
                    ),
                ),
                (
                    "api_endpoint",
                    models.CharField(
                        blank=True,
                        help_text="API endpoint URL (e.g., gate.smartproxy.com:10000)",
                        max_length=255,
                    ),
                ),
                (
                    "api_key",
                    models.CharField(
                        blank=True, help_text="API key for provider", max_length=255
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True,
                        help_text="Username for proxy authentication",
                        max_length=100,
                    ),
                ),
                (
                    "password_encrypted",
                    models.TextField(blank=True, help_text="Encrypted password"),
                ),
                (
                    "cost_per_gb",
                    models.DecimalField(
                        decimal_places=4,
                        default=1.0,
                        help_text="Cost per GB of data (USD)",
                        max_digits=10,
                    ),
                ),
                (
                    "cost_per_request",
                    models.DecimalField(
                        decimal_places=6,
                        default=0.0001,
                        help_text="Cost per request (USD)",
                        max_digits=10,
                    ),
                ),
                (
                    "minimum_monthly_cost",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Minimum monthly commitment (USD)",
                        max_digits=10,
                    ),
                ),
                (
                    "monthly_bandwidth_gb",
                    models.PositiveIntegerField(
                        blank=True, help_text="Monthly bandwidth limit in GB", null=True
                    ),
                ),
                (
                    "concurrent_connections",
                    models.PositiveIntegerField(
                        default=100, help_text="Maximum concurrent connections"
                    ),
                ),
                (
                    "supports_countries",
                    models.BooleanField(
                        default=True, help_text="Supports country-level targeting"
                    ),
                ),
                (
                    "supports_cities",
                    models.BooleanField(
                        default=False, help_text="Supports city-level targeting"
                    ),
                ),
                (
                    "supports_sticky_sessions",
                    models.BooleanField(
                        default=True, help_text="Supports sticky/persistent sessions"
                    ),
                ),
                (
                    "supports_residential",
                    models.BooleanField(
                        default=False, help_text="Offers residential IPs"
                    ),
                ),
                (
                    "total_requests",
                    models.PositiveBigIntegerField(
                        default=0, help_text="Total requests made through this provider"
                    ),
                ),
                (
                    "total_bandwidth_mb",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Total bandwidth used in MB",
                        max_digits=15,
                    ),
                ),
                (
                    "total_cost",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Total cost incurred (USD)",
                        max_digits=10,
                    ),
                ),
                (
                    "success_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Success rate percentage",
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "average_response_time",
                    models.FloatField(
                        default=0, help_text="Average response time in seconds"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "last_used",
                    models.DateTimeField(
                        blank=True,
                        help_text="When this provider was last used",
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Proxy Provider Settings",
                "verbose_name_plural": "Proxy Provider Settings",
                "ordering": ["provider"],
            },
        ),
        migrations.CreateModel(
            name="EnhancedProxyModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(help_text="Proxy IP address"),
                ),
                (
                    "port",
                    models.PositiveIntegerField(
                        help_text="Proxy port",
                        validators=[django.core.validators.MaxValueValidator(65535)],
                    ),
                ),
                (
                    "proxy_type",
                    models.CharField(
                        choices=[
                            ("http", "HTTP"),
                            ("https", "HTTPS"),
                            ("socks4", "SOCKS4"),
                            ("socks5", "SOCKS5"),
                        ],
                        default="http",
                        help_text="Type of proxy",
                        max_length=10,
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True,
                        help_text="Username for proxy authentication",
                        max_length=100,
                    ),
                ),
                (
                    "password",
                    models.CharField(
                        blank=True,
                        help_text="Password for proxy authentication",
                        max_length=100,
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("paid", "Paid Provider"),
                            ("free", "Free Source"),
                            ("manual", "Manually Added"),
                        ],
                        help_text="Where this proxy came from",
                        max_length=20,
                    ),
                ),
                (
                    "country_code",
                    models.CharField(
                        blank=True,
                        help_text="ISO 3166-1 alpha-2 country code",
                        max_length=2,
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True, help_text="City location if known", max_length=100
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("testing", "Testing"),
                            ("failed", "Failed"),
                            ("blacklisted", "Blacklisted"),
                        ],
                        db_index=True,
                        default="testing",
                        help_text="Current proxy status",
                        max_length=20,
                    ),
                ),
                (
                    "last_check",
                    models.DateTimeField(
                        blank=True, help_text="Last health check time", null=True
                    ),
                ),
                (
                    "last_used",
                    models.DateTimeField(
                        blank=True, help_text="Last time proxy was used", null=True
                    ),
                ),
                (
                    "response_time",
                    models.FloatField(
                        default=0, help_text="Average response time in seconds"
                    ),
                ),
                (
                    "success_count",
                    models.PositiveIntegerField(
                        default=0, help_text="Successful requests"
                    ),
                ),
                (
                    "failure_count",
                    models.PositiveIntegerField(default=0, help_text="Failed requests"),
                ),
                (
                    "consecutive_failures",
                    models.PositiveIntegerField(
                        default=0, help_text="Consecutive failure count"
                    ),
                ),
                (
                    "daily_request_count",
                    models.PositiveIntegerField(
                        default=0, help_text="Requests made today"
                    ),
                ),
                (
                    "total_request_count",
                    models.PositiveBigIntegerField(
                        default=0, help_text="Total requests made"
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Additional notes about this proxy"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "provider",
                    models.ForeignKey(
                        blank=True,
                        help_text="Provider if this is a paid proxy",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="proxies",
                        to="asda_scraper.proxyprovidersettings",
                    ),
                ),
            ],
            options={
                "verbose_name": "Enhanced Proxy",
                "verbose_name_plural": "Enhanced Proxies",
                "ordering": ["-status", "response_time"],
                "indexes": [
                    models.Index(
                        fields=["status", "source"],
                        name="asda_scrape_status_cc66d8_idx",
                    ),
                    models.Index(
                        fields=["last_used", "status"],
                        name="asda_scrape_last_us_b3685f_idx",
                    ),
                ],
                "unique_together": {("ip_address", "port")},
            },
        ),
    ]
