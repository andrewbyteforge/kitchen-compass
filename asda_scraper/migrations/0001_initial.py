# Generated by Django 5.2.3 on 2025-07-13 13:43

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('url', models.URLField(unique=True)),
                ('level', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='asda_scraper.category')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['level', 'name'],
            },
        ),
        migrations.CreateModel(
            name='CrawledURL',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(db_index=True, unique=True)),
                ('url_hash', models.CharField(db_index=True, max_length=64, unique=True)),
                ('crawler_type', models.CharField(choices=[('CATEGORY', 'Category Mapper'), ('PRODUCT_LIST', 'Product List Crawler'), ('PRODUCT_DETAIL', 'Product Detail Crawler')], max_length=20)),
                ('last_crawled', models.DateTimeField(auto_now=True)),
                ('times_crawled', models.IntegerField(default=1)),
            ],
            options={
                'indexes': [models.Index(fields=['crawler_type', 'last_crawled'], name='asda_scrape_crawler_f86fbb_idx')],
            },
        ),
        migrations.CreateModel(
            name='CrawlSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crawler_type', models.CharField(choices=[('CATEGORY', 'Category Mapper'), ('PRODUCT_LIST', 'Product List Crawler'), ('PRODUCT_DETAIL', 'Product Detail Crawler')], max_length=20)),
                ('status', models.CharField(choices=[('RUNNING', 'Running'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('STOPPED', 'Stopped')], default='RUNNING', max_length=20)),
                ('total_items', models.IntegerField(default=0)),
                ('processed_items', models.IntegerField(default=0)),
                ('failed_items', models.IntegerField(default=0)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_log', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-started_at'],
                'indexes': [models.Index(fields=['crawler_type', 'status'], name='asda_scrape_crawler_c023fd_idx')],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asda_id', models.CharField(db_index=True, max_length=50, unique=True)),
                ('name', models.CharField(max_length=500)),
                ('brand', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('url', models.URLField(unique=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_per_unit', models.CharField(blank=True, max_length=100, null=True)),
                ('on_offer', models.BooleanField(default=False)),
                ('offer_text', models.CharField(blank=True, max_length=255, null=True)),
                ('is_available', models.BooleanField(default=True)),
                ('last_scraped', models.DateTimeField(blank=True, null=True)),
                ('nutrition_scraped', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('categories', models.ManyToManyField(related_name='products', to='asda_scraper.category')),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='NutritionInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('energy_kj', models.IntegerField(blank=True, null=True)),
                ('energy_kcal', models.IntegerField(blank=True, null=True)),
                ('fat', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('saturated_fat', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('carbohydrates', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('sugars', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('fibre', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('protein', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('salt', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('other_nutrients', models.JSONField(blank=True, default=dict)),
                ('serving_size', models.CharField(blank=True, max_length=100, null=True)),
                ('servings_per_pack', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('raw_nutrition_text', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='nutrition', to='asda_scraper.product')),
            ],
            options={
                'verbose_name_plural': 'Nutrition Information',
            },
        ),
        migrations.CreateModel(
            name='CrawlQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(db_index=True)),
                ('url_hash', models.CharField(db_index=True, max_length=64)),
                ('queue_type', models.CharField(choices=[('CATEGORY', 'Category URL'), ('PRODUCT_LIST', 'Product List URL'), ('PRODUCT_DETAIL', 'Product Detail URL')], db_index=True, max_length=20)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], db_index=True, default='PENDING', max_length=20)),
                ('priority', models.IntegerField(db_index=True, default=0)),
                ('attempts', models.IntegerField(default=0)),
                ('max_attempts', models.IntegerField(default=3)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='queue_items', to='asda_scraper.category')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='queue_items', to='asda_scraper.product')),
            ],
            options={
                'ordering': ['-priority', 'created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['level', 'is_active'], name='asda_scrape_level_8986c1_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['asda_id', 'is_available'], name='asda_scrape_asda_id_8cd2e0_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['nutrition_scraped', 'is_available'], name='asda_scrape_nutriti_9d18aa_idx'),
        ),
        migrations.AddIndex(
            model_name='crawlqueue',
            index=models.Index(fields=['queue_type', 'status', '-priority'], name='asda_scrape_queue_t_dd33f5_idx'),
        ),
        migrations.AddIndex(
            model_name='crawlqueue',
            index=models.Index(fields=['url_hash', 'queue_type'], name='asda_scrape_url_has_e9dc40_idx'),
        ),
        migrations.AddConstraint(
            model_name='crawlqueue',
            constraint=models.UniqueConstraint(fields=('url_hash', 'queue_type'), name='unique_url_per_queue_type'),
        ),
    ]
