# Generated by Django 5.2.3 on 2025-06-15 17:49

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RecipeCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(default='bi-tag', help_text="Bootstrap icon class (e.g., 'bi-egg-fried' for breakfast)", max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Recipe Category',
                'verbose_name_plural': 'Recipe Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('description', models.TextField(help_text='Brief description of the recipe')),
                ('prep_time', models.PositiveIntegerField(help_text='Preparation time in minutes', validators=[django.core.validators.MinValueValidator(1)])),
                ('cook_time', models.PositiveIntegerField(help_text='Cooking time in minutes', validators=[django.core.validators.MinValueValidator(1)])),
                ('servings', models.PositiveIntegerField(default=4, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)])),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], default='medium', max_length=10)),
                ('image', models.ImageField(blank=True, help_text='Recipe image (optional)', null=True, upload_to='recipes/')),
                ('is_public', models.BooleanField(default=True, help_text='Make recipe visible to other users')),
                ('is_featured', models.BooleanField(default=False, help_text='Featured recipes appear on homepage')),
                ('dietary_info', models.JSONField(blank=True, default=dict, help_text='Dietary restrictions and allergens')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meta_description', models.CharField(blank=True, help_text='SEO meta description', max_length=160)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to=settings.AUTH_USER_MODEL)),
                ('categories', models.ManyToManyField(help_text='Select one or more categories', related_name='recipes', to='recipe_hub.recipecategory')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('quantity', models.CharField(help_text="e.g., '2', '1/2', '1-2'", max_length=50)),
                ('unit', models.CharField(blank=True, help_text="e.g., 'cups', 'tablespoons', 'pounds'", max_length=50)),
                ('notes', models.CharField(blank=True, help_text="e.g., 'finely chopped', 'room temperature'", max_length=200)),
                ('order', models.PositiveIntegerField(default=0)),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredients', to='recipe_hub.recipe')),
            ],
            options={
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='RecipeComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('is_approved', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='recipe_hub.recipecomment')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='recipe_hub.recipe')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipe_comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='RecipeFavorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to='recipe_hub.recipe')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_recipes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RecipeRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('review', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='recipe_hub.recipe')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipe_ratings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Instruction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_number', models.PositiveIntegerField()),
                ('instruction', models.TextField()),
                ('time_minutes', models.PositiveIntegerField(blank=True, help_text='Time needed for this step (optional)', null=True)),
                ('image', models.ImageField(blank=True, help_text='Optional image for this step', null=True, upload_to='recipes/steps/')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instructions', to='recipe_hub.recipe')),
            ],
            options={
                'ordering': ['step_number'],
                'unique_together': {('recipe', 'step_number')},
            },
        ),
        migrations.AddIndex(
            model_name='recipe',
            index=models.Index(fields=['slug'], name='recipe_hub__slug_1adb91_idx'),
        ),
        migrations.AddIndex(
            model_name='recipe',
            index=models.Index(fields=['author', '-created_at'], name='recipe_hub__author__ba572d_idx'),
        ),
        migrations.AddIndex(
            model_name='recipe',
            index=models.Index(fields=['is_public', '-created_at'], name='recipe_hub__is_publ_b396af_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='recipefavorite',
            unique_together={('recipe', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='reciperating',
            unique_together={('recipe', 'user')},
        ),
    ]
